% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/treeseq_sankoff.R
\name{treeseq_linear_mpr_minimize}
\alias{treeseq_linear_mpr_minimize}
\title{Determine optimal continuous locations from linear parsimony costs}
\usage{
treeseq_linear_mpr_minimize(obj)
}
\arguments{
\item{obj}{Result object from \code{\link{treeseq_linear_mpr}}}
}
\value{
A numeric matrix where each row gives the optimal geographic coordinates
  for a node. Columns correspond to spatial dimensions (x, y, etc.) in the same
  order as the input sample_locations.
}
\description{
Uses the absolute distance costs computed by \code{treeseq_linear_mpr} to identify 
the optimal geographic location for each ancestral node - the location that 
minimizes the total absolute distance cost needed to explain sample locations. For 
each node, the optimal location is found by minimizing the node's piecewise linear 
cost function.
}
\details{
For each node, this function minimizes the piecewise linear cost function 
computed by \code{treeseq_linear_mpr} to find the location in continuous space 
that achieves the minimum total absolute distance cost. Due to the L1 (Manhattan) 
distance metric used, optimal locations are often at breakpoints of the piecewise 
linear function.

The optimal location for a node represents the spatial position that minimizes
the sum of absolute distances to its connected nodes (parent and children) in 
the tree, weighted by the proportion of the genome inherited through each 
connection.
}
\examples{
# Load tree sequence
ts <- treeseq_load(system.file("extdata", "test.trees", package = "gaia"))

# Define the x and y coordinates (locations)
x <- c(0, 2, 1)
y <- c(0, 0, 1)

# Create the matrix using cbind() and ensuring integer type
samples <- cbind(node_id = 0:2, x = as.integer(x), y = as.integer(y))

mpr_costs <- treeseq_linear_mpr(ts, samples)

# Find optimal continuous locations for all nodes 0-6
# Unlike quadratic MPR, optimal locations often at sample coordinates
locations <- treeseq_linear_mpr_minimize(mpr_costs)

}
\seealso{
\code{\link{treeseq_linear_mpr}} for computing absolute distance costs
\code{\link{treeseq_linear_mpr_minimize_discrete}} for discrete location assignments
}
