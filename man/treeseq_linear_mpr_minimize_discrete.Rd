% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/treeseq_sankoff.R
\name{treeseq_linear_mpr_minimize_discrete}
\alias{treeseq_linear_mpr_minimize_discrete}
\title{Assign ancestral nodes to discrete locations using linear parsimony costs}
\usage{
treeseq_linear_mpr_minimize_discrete(obj, sites)
}
\arguments{
\item{obj}{Result object from \code{\link{treeseq_linear_mpr}}}

\item{sites}{A numeric matrix where each row represents a possible location,
with columns corresponding to spatial dimensions (x, y, etc.) in the same
order as used in the original sample_locations}
}
\value{
An integer vector giving the index of the optimal site from the sites
  matrix for each node in the tree sequence. Indices are 1-based.
}
\description{
Uses the absolute distance costs computed by \code{treeseq_linear_mpr} to assign 
each ancestral node to the discrete location (from a provided set) that minimizes 
the total absolute distance cost needed to explain sample locations. Unlike 
\code{treeseq_linear_mpr_minimize}, which allows locations anywhere in continuous 
space, this function restricts assignments to a specified set of discrete locations.
}
\details{
For each node, this function evaluates the piecewise linear cost function 
computed by \code{treeseq_linear_mpr} at each candidate location provided in 
the sites matrix. The location achieving the minimum cost is selected as optimal 
for that node.

This function is useful when ancestral locations must be restricted to a
discrete set of possibilities (e.g., habitat patches, sampling locations)
despite using a continuous-space reconstruction method.
}
\examples{
# Load tree sequence
ts = treeseq_load(system.file("extdata", "test.trees", package="gaia"))

# Define the x and y coordinates (locations)
x = c(0, 2, 1)
y = c(0, 0, 1)

samples = cbind(node_id=0:2, x=x, y=y)

mpr_costs = treeseq_linear_mpr(ts, samples)

# Define possible locations matching sample coordinates
sites = matrix(c(
  0, 0,    # Site 1: matches node 0
  2, 0,    # Site 2: matches node 1 
  1, 1     # Site 3: matches node 2
), ncol=2, byrow=TRUE)

# Get optimal site assignment for all nodes 0-6
location_indices = treeseq_linear_mpr_minimize_discrete(mpr_costs, sites)
}
\seealso{
\code{\link{treeseq_linear_mpr}} for computing absolute distance costs
\code{\link{treeseq_linear_mpr_minimize}} for continuous location assignments
}
