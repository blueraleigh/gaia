% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/treeseq_sankoff.R
\name{treeseq_quadratic_mpr_minimize}
\alias{treeseq_quadratic_mpr_minimize}
\title{Determine optimal continuous locations from quadratic parsimony costs}
\usage{
treeseq_quadratic_mpr_minimize(obj)
}
\arguments{
\item{obj}{Result object from \code{\link{treeseq_quadratic_mpr}}}
}
\value{
A numeric matrix where each row gives the optimal geographic coordinates
  for a node. Columns correspond to spatial dimensions (x, y, etc.) in the same
  order as the input sample_locations.
}
\description{
Uses the squared distance costs computed by \code{treeseq_quadratic_mpr} to 
identify the optimal geographic location for each ancestral node - the location that 
minimizes the total squared distance cost needed to explain sample locations. For 
each node, the optimal location is found by minimizing the node's quadratic cost 
function.
}
\details{
For each node, this function minimizes the quadratic cost function computed by
\code{treeseq_quadratic_mpr} to find the location in continuous space that
achieves the minimum total squared distance cost. The quadratic form ensures
a unique minimum for each node.

The optimal location for a node represents the spatial position that minimizes
the sum of squared Euclidean distances to its connected nodes (parent and
children) in the tree, weighted by the proportion of the genome inherited
through each connection.
}
\examples{
# Load example tree sequence
ts <- treeseq_load(system.file("extdata", "example.trees", package="gaia"))

# Define sample locations (3 samples in 2D space)
samples <- data.frame(
  node_id = 0:2,
  x = c(0.5, 1.25, 2.0),
  y = c(2.7, 0.41, 1.5)
)

# Compute squared distance costs
mpr_costs <- treeseq_quadratic_mpr(ts, samples)

# Find optimal continuous locations
locations <- treeseq_quadratic_mpr_minimize(mpr_costs)

}
\seealso{
\code{\link{treeseq_quadratic_mpr}} for computing squared distance costs
\code{\link{treeseq_quadratic_mpr_minimize_discrete}} for discrete location assignments
}
