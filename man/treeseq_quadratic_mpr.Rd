% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/treeseq_sankoff.R
\name{treeseq_quadratic_mpr}
\alias{treeseq_quadratic_mpr}
\title{Compute quadratic parsimony costs for continuous geographic reconstruction}
\usage{
treeseq_quadratic_mpr(ts, sample_locations, use_brlen = FALSE)
}
\arguments{
\item{ts}{A \code{treeseq} object, typically loaded via \code{\link{treeseq_load}}}

\item{sample_locations}{A numeric matrix with columns:
\describe{
  \item{node_id}{Node identifiers for sampled genomes (0-based indexing)}
  \item{Additional columns}{Coordinate values for each spatial dimension (x, y, etc.)}
}}

\item{use_brlen}{Logical indicating whether to scale distances by inverse
branch lengths (TRUE) or treat all branches equally (FALSE, default)}
}
\value{
A list with class \code{c("quadratic", "mpr")} containing:
  \describe{
    \item{mean_tree_length}{Genome-wide average squared distance cost}
    \item{tree_length}{Vector giving the squared distance cost for each local tree}
    \item{mpr}{Array containing quadratic function parameters for each node that
      define the squared distance cost as a function of ancestor location}
  }
}
\description{
Uses squared change parsimony to compute the minimum squared distance costs needed
to explain sampled geographic coordinates under different possible ancestral 
locations. For each ancestral node, calculates parameters of a quadratic function 
that gives the total squared distance cost required to explain all sampled 
descendant locations when that ancestor is placed at any point in continuous space.
}
\details{
This function implements squared change parsimony reconstruction on tree sequences
following Maddison (1991). For each non-sample node, it computes parameters of a
quadratic function that gives the minimum total squared distance cost needed to
explain the geographic coordinates of all sampled descendants when that ancestor
is placed at any location in continuous space. These parameters are then used to
determine optimal geographic locations using \code{treeseq_quadratic_mpr_minimize}.

The method assumes ancestral locations can be anywhere in continuous space, rather
than restricted to discrete states like \code{treeseq_discrete_mpr}. It minimizes
the sum of squared Euclidean distances between connected nodes in the tree.
}
\examples{
# Load tree sequence
ts <- treeseq_load(system.file("extdata", "test.trees", package = "gaia"))

# Define the x and y coordinates (locations)
x <- c(0, 2, 1)
y <- c(0, 0, 1)

# Create the matrix using cbind() and ensuring integer type
samples <- cbind(node_id = 0:2, x = as.integer(x), y = as.integer(y))

# Compute squared distance costs for nodes 0-6
mpr_costs <- treeseq_quadratic_mpr(ts, samples)

# Can use branch lengths to scale distances by time
mpr_costs_bl <- treeseq_quadratic_mpr(ts, samples, use_brlen=TRUE)

}
\references{
Maddison, W.P. (1991) Square-Change Parsimony Reconstructions of Ancestral
States for Continuous-Valued Characters on a Phylogenetic Tree. 
\emph{Systematic Zoology}, 40(3):304-314.
}
\seealso{
\code{\link{treeseq_quadratic_mpr_minimize}} for determining optimal locations
\code{\link{treeseq_discrete_mpr}} for discrete state reconstruction
\code{\link{treeseq_linear_mpr}} for linear distance reconstruction
}
